service: lynx-api
frameworkVersion: "3"
plugins:
  - serverless-prune-plugin
  - serverless-dotenv-plugin
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline-ses
  - serverless-offline
custom:
  stage: ${opt:stage, self:provider.stage}
  serverlessPluginTypescript:
    tsConfigFileLocation: ./tsconfig.lambda.json
  dynamodb:
    stages:
      - ${opt:stage, self:provider.stage}
    start:
      port: 8080
      inMemory: false
      migrate: true
  serverless-offline:
    httpPort: 8000
    websocketPort: 8001
    lambdaPort: 8002
    useWorkerThreads: true
  ses:
    stages:
      - dev
    clean: true
    outputDir: ./.build/ses_output
package:
  individually: true
provider:
  name: aws
  stage: dev
  region: us-west-1
  runtime: nodejs18.x
  memorySize: 1024
functions:
  graphql:
    description: GraphQL API
    handler: ./graphql/index.handler
    role: GraphQLAPILambdaRole
    events:
      - http:
          path: /graphql
          method: post
          cors: true
    package:
      patterns:
        - ./schema.graphql
  lynx-reducer:
    description: Reduces User Information For Leaderboard Tracking
    handler: ./reducer/index.handler
    role: ReducerLambdaRole
    events:
      - s3: lynx-slopes-unzipped
  lynx-unzipper:
    description: Unzips Uploaded Slopes Files
    handler: ./unzipper/index.handler
    role: UnzipperLambdaRole
    events:
      - s3: lynx-slopes-zipped
resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: lynx-users
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: appleId
            AttributeType: S
          - AttributeName: googleId
            AttributeType: S
          - AttributeName: distance
            AttributeType: "N"
          - AttributeName: runCount
            AttributeType: "N"
          - AttributeName: topSpeed
            AttributeType: "N"
          - AttributeName: verticalDistance
            AttributeType: "N"
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: appleId
            KeySchema:
              - AttributeName: appleId
                KeyType: HASH
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - validatedInvite
          - IndexName: googleId
            KeySchema:
              - AttributeName: googleId
                KeyType: HASH
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - validatedInvite
          - IndexName: distance
            KeySchema:
              - AttributeName: distance
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
          - IndexName: runCount
            KeySchema:
              - AttributeName: runCount
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
          - IndexName: topSpeed
            KeySchema:
              - AttributeName: topSpeed
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
          - IndexName: verticalDistance
            KeySchema:
              - AttributeName: verticalDistance
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
    inviteTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: lynx-invites
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
    LynxProfilePictureBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: lynx-profile-pictures
        OwnershipControls:
          Rules:
            - ObjectOwnership: BucketOwnerEnforced
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
    LynxProfilePictureBucketPolicy:
      Type: AWS::S3::BucketPolicy
      DependsOn: [ LynxProfilePictureBucket ]
      Properties:
        Bucket: lynx-profile-pictures
        PolicyDocument:
          Statement:
            - Action:
                - s3:GetObject
              Effect: Allow
              Resource:
                - arn:aws:s3:::lynx-profile-pictures/*
              Principal: "*"
    GraphQLAPILambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: GraphQLAPILambdaRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: GraphQLAPILambdaRolePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:TagResource
                  Resource:
                    - arn:aws:logs:${aws:region}:${aws:accountId}:log-group:/aws/lambda/*:*:*
                - Effect: Allow
                  Action:
                    - s3:ListBucket
                    - s3:GetObject
                    - s3:DeleteObject
                  Resource:
                    - arn:aws:s3:::lynx-slopes-unzipped
                    - arn:aws:s3:::lynx-slopes-unzipped/*
                - Effect: Allow
                  Action:
                    - s3:PutObject
                    - s3:DeleteObject
                  Resource:
                    - arn:aws:s3:::lynx-slopes-zipped
                    - arn:aws:s3:::lynx-slopes-zipped/*
                - Effect: Allow
                  Action:
                    - s3:ListBucket
                    - s3:GetObject
                    - s3:PutObject
                    - s3:DeleteObject
                  Resource:
                    - arn:aws:s3:::lynx-profile-pictures
                    - arn:aws:s3:::lynx-profile-pictures/*
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:DeleteItem
                    - dynamodb:PutItem
                    - dynamodb:Query
                    - dynamodb:Scan
                    - dynamodb:UpdateItem
                  Resource:
                    - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/lynx-users
                    - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/lynx-users/index/*
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:DeleteItem
                    - dynamodb:PutItem
                    - dynamodb:Query
                  Resource:
                    - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/lynx-invites
    ReducerLambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ReducerLambdaRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: GraphQLAPILambdaRolePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:TagResource
                  Resource:
                    - arn:aws:logs:${aws:region}:${aws:accountId}:log-group:/aws/lambda/*:*:*
                - Effect: Allow
                  Action:
                    - s3:GetObject
                  Resource:
                    - arn:aws:s3:::lynx-slopes-zipped
                    - arn:aws:s3:::lynx-slopes-zipped/*
                - Effect: Allow
                  Action:
                    - s3:PutObject
                  Resource:
                    - arn:aws:s3:::lynx-slopes-unzipped
                    - arn:aws:s3:::lynx-slopes-unzipped/*
    UnzipperLambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: UnzipperLambdaRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: GraphQLAPILambdaRolePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:TagResource
                  Resource:
                    - arn:aws:logs:${aws:region}:${aws:accountId}:log-group:/aws/lambda/*:*:*
                - Effect: Allow
                  Action:
                    - s3:GetObject
                  Resource:
                    - arn:aws:s3:::lynx-slopes-unzipped
                    - arn:aws:s3:::lynx-slopes-unzipped/*
                - Effect: Allow
                  Action:
                    - dynamodb:UpdateItem
                  Resource:
                    - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/lynx-users
