name: Continuous Deployment

on:
  push:
    branches:
      - main

jobs:
  
  deploy-aws-unzipper-lambda:
    
    name: Deploy AWS Unzipper Lambda
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Cache Node Modules
        uses: actions/cache@v2
        id: cache
        with:
          path: mountain-ui-slopes-unzipper/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node Modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --prefix mountain-ui-slopes-unzipper

      - name: Deploy
        run: npm run --prefix mountain-ui-slopes-unzipper deploy
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

  deploy-aws-api-lambda:
    
    name: Deploy AWS GraphQL API Lambda
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Cache Node Modules
        uses: actions/cache@v2
        id: cache
        with:
          path: mountain-ui-api/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node Modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --prefix mountain-ui-api

      - name: Create Mountain-UI .env File
        uses: iamsauravsharma/create-dotenv@v1.2.1
        with:
          env-prefix: 'ENV_'
          directory: 'mountain-ui-api/'
        env:
          ENV_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          ENV_APPLE_CLIENT_ID: ${{ secrets.APPLE_CLIENT_ID }}
          ENV_AUTH_KEY: ${{ secrets.AUTH_KEY }}

      - name: Deploy
        run: npm run --prefix mountain-ui-api deploy
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}