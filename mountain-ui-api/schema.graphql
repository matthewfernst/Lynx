type User {
    id: ID!
    email: String!
    firstName: String
    lastName: String
    profilePictureUrl: String
    runRecords: [RunRecord!]!
}

type RunRecord {
    id: ID!
    conditions: String!
    distance: Float!
    duration: Float!
    start: String!
    end: String!
    locationName: String!
    runCount: String!
    topSpeed: Float!
    vertical: Float!
}

input KeyValuePair {
    key: String!
    value: String!
}

scalar AuthorizationToken

type Query {
    selfLookup: User
}

type Mutation {
    createUser(id: ID!, email: String!): AuthorizationToken!
    loginUser(id: ID!): AuthorizationToken
    editUser(userPairs: [KeyValuePair!]!): User!
    createUserRecordUploadUrl: [String]!
}
