type User {
    id: ID!
    appleId: ID!
    googleId: ID!
    email: String!
    firstName: String
    lastName: String
    profilePictureUrl: String
    runRecords: [RunRecord!]!
}

type RunRecord {
    id: ID!
    conditions: String!
    distance: Float!
    duration: Float!
    start: String!
    end: String!
    locationName: String!
    runCount: String!
    topSpeed: Float!
    vertical: Float!
}

enum LoginType {
    APPLE
    GOOGLE
}

input KeyValuePair {
    key: String!
    value: String!
}

scalar AuthorizationToken

type Query {
    selfLookup: User
}

type Mutation {
    createUserOrSignIn(
        type: LoginType!
        id: ID!,
        token: ID!,
        email: String,
        userData: [KeyValuePair!]
    ): AuthorizationToken
    editUser(userPairs: [KeyValuePair!]!): User!
    createUserProfilePictureUploadUrl: String!
    createUserRecordUploadUrl(requestedPaths: [String!]!): [String]!
}
